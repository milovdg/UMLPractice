@startuml withdrawal-common.jpg
scale max 8192 height
autonumber
legend top left
  Common crypto withdrawal sequence diagram except:
  - Antifraud details
  - Create requisites for bank, cup
  - Approve CUP requisites by manager
  - Export of bank payments
end legend

actor Client
actor Manager
participant APP
participant FxPay
participant AB
participant FxBank
participant UPP
participant AAA
participant PS as "EPG \n+other provider"
participant Crypto_adapter
participant clientService
participant clientProfileService
participant transliterateService as "transliterate"
participant dealing
participant Kafka

== Get withdrawal requests (libertex, xcoex only) ==
Client -> APP : click withdrawal
activate Client
activate APP
APP -> FxBank: getWithdrawalRequests
activate FxBank
FxBank --> APP : requests
deactivate FxBank
APP --> Client : show requests
note right
Also calls getWithdrawalMethodsRestrictions
And block new request button
if has some restrictions
end note
deactivate APP
deactivate Client

alt Client click cancel
Client -> APP : cancel request
activate Client
activate APP
APP -> FxBank: cancelWithdrawalRequest
activate FxBank
FxBank -> Kafka: withdrawal:cancel
FxBank --> APP : Ok
deactivate FxBank
APP -> Client: Ok
deactivate APP
deactivate Client
end

== Get withdrawal page link ==

Client -> APP : click new request
activate Client
activate APP
APP -> FxPay : call getWithdrawalPageLink
note right
    accountCode
    accountCurrency
    restriction url
end note
activate FxPay

FxPay -> AAA : checkSession
activate AAA
AAA --> FxPay : session details
deactivate AAA

par
FxPay -> FxBank : getWithdrawalRequisites
activate FxBank
FxBank --> FxPay : WD requisites
deactivate FxBank

FxPay -> FxPay : getWithdrawalMethodsDetails

FxPay -> FxBank : getAccountInfo with updateBalance
activate FxBank
FxBank --> FxPay : accounts
deactivate FxBank

FxPay -> FxBank : getWithdrawalMethodsRestrictions
activate FxBank
FxBank --> FxPay : Ok|Restriction
deactivate FxBank
end

alt Has restrictions
FxPay --> APP : WithdrawalNotAllowed
APP --> Client : KYC forms
Client --> Client : KYC forms
note right
Fill restrictions from
getWithdrawalMethodsRestrictions
Again call getWithdrawalPageLink
end note

else No restrictions
FxPay -> UPP : authorizeWithdrawal
note right
    accountCode
    accountCurrency
    restriction url
    withdrawal methods detail (FxPay)
    session (AAA)
end note
activate UPP
UPP -> UPP: generate link
UPP --> FxPay : link to UPP page
UPP -> UPP: start preload
deactivate UPP
FxPay --> APP : RedirectToLink
deactivate FxPay
APP --> Client : link to withdrawal page
deactivate APP
end



== Preload data for withdrawal page during client redirect ==

UPP -> UPP : continue preload
activate UPP
par
opt methods with payment gateway == EPG are exists
UPP -> PS : customer
activate PS
PS --> UPP : saved accounts (requisites)
deactivate PS

UPP -> PS : expressCheckoutV2 request for each currency
activate PS
PS --> UPP : list of EPG methods
deactivate PS
end

UPP -> FxBank : getAccountInfo
activate FxBank
FxBank --> UPP : accounts
deactivate FxBank

UPP -> FxBank : getProfile
note right
    Can be removed for WD
    After moving /pay to from EPG to FxPay
end note
activate FxBank #FF0000
FxBank --> UPP : profile
deactivate FxBank

deactivate UPP
end



== Open withdrawal page ==

Client -> UPP : go to link
activate UPP
UPP -> UPP : wait for preloads
note left
    Wait for all preloads:
    - customer (EPG)
    - expressCheckoutV2 (EPG)
    - getProfile
    - getAccountInfo
end note
alt method with payment gateway = EPG
UPP -> UPP : merge our requisites and EPG
end
UPP -> UPP : build page attributes
UPP --> Client : withdrawal page
deactivate UPP
deactivate Client

...
== Change method / amount / requisite ==

Client -> UPP : change method, amount, requisite (getWithdrawalInfo)
activate Client
par
activate UPP

UPP -> FxPay : calculateWithdrawalParameters
note left
accountCode, accountCurrency
method
currency, amount
requisiteId (optional)
end note
activate FxPay

FxPay -> FxBank : getWithdrawalRequisites
activate FxBank
FxBank --> FxPay : WD requisites
deactivate FxBank
FxPay -> FxPay : calculate payment provider \n by requisite or without

FxPay -> FxBank : calculateWithdrawalParameters
activate FxBank
FxBank --> FxPay : commission, compensation, \nconversion rate
deactivate FxBank
FxPay --> UPP : commission, compensation, \nconversion rate
deactivate FxPay



UPP -> FxPay : checkWithdrawal
activate FxPay

note left
accountCode, accountCurrency
method
currency, amount
requisiteId (optional)
end note

par
group group-1
    FxPay -> FxBank : getWithdrawalMethodsRestrictions
    activate FxBank
    FxBank --> FxPay : Ok
    deactivate FxBank
end
group group-2 consecutive
    FxPay -> FxBank : getWithdrawalRequisites
    activate FxBank
    FxBank --> FxPay : WD requisites
    deactivate FxBank
    FxPay -> FxPay : calculate payment provider \n by requisite or without

    FxPay -> FxBank : checkWithdrawalParameters
    activate FxBank
    FxBank --> FxPay : warnings, amount restrictions
    deactivate FxBank
end
group group-3 (is check requisite allowed by PS)
    FxPay -> PS : check withdrawal requisite (PS)
    note left
    pay_qiwi_out
    pay_skrill_out
    pay_webmoney_out
    pay_mobile_out
    pay_yandex_out
    end note
    activate PS
    PS --> FxPay : restrictions
    deactivate PS
end
group group-4 (is bank requisites)
    FxPay -> FxBank : checkBankRequisite
    note left
    pay_bank_out
    end note
    activate FxBank
    FxBank --> FxPay : restrictions, warnings
    deactivate FxBank
    end
end

FxPay --> UPP : commission, compensation, \nconversion rate, warnings, \namount restrictions
deactivate FxPay
end

UPP --> Client: commission, compensation, \nconversion rate, warnings, \namount restrictions
deactivate UPP
deactivate Client


...
== Create withdrawal request ==
Client -> UPP : submit form with amount, requisite
activate Client
activate UPP

UPP -> FxPay : requestWithdrawal
note left
accountCode, accountCurrency
method;
currency, amount;
requisiteId (optional)
optionalFieldValues
end note
activate FxPay


par
group group-1 - che
    FxPay -> FxBank : <b>getWithdrawalRestrictions</b>
    activate FxBank
    FxBank --> FxPay : Ok | Restricted
    deactivate FxBank
end
group group-2 consecutive, prepare data and check parameters
    alt requisiteId not passed, optionalFieldValues passed
        FxPay -> FxBank : setCustomerWithdrawalRequisite
        activate FxBank
        FxBank --> FxPay : Ok
        deactivate FxBank
    end
    FxPay -> FxBank : getWithdrawalRequisites
    activate FxBank
    FxBank --> FxPay : WD requisites
    deactivate FxBank
    FxPay -> FxPay : calculate payment provider \n by requisite

    FxPay -> FxBank : checkWithdrawalParameters
    activate FxBank
    FxBank --> FxPay : warnings, amount restrictions
    deactivate FxBank
end
group group-3 - check requisite allowed PS
    FxPay -> PS : check withdrawal requisite
    note left
    pay_qiwi_out
    pay_skrill_out
    pay_webmoney_out
    pay_mobile_out
    pay_yandex_out
    end note
    activate PS
    PS --> FxPay : restrictions
    deactivate PS
end
group group-4 - check bank requisites
    FxPay -> FxBank : checkBankRequisite
    note left
    pay_bank_out
    end note
    activate FxBank
    FxBank --> FxPay : restrictions, warnings
    deactivate FxBank
end
end
group interruption-1 (check 2FA is required)
       FxPay -> FxPay : getConfiguration from properties
       note right
       web-services.withdraw_api_ws.two_fa.wd.enabled=CRYP,STORM
       web-services.withdraw_api_ws.two_fa.wd.byAB=
       end note
       alt
       FxPay -> AB : determine
       activate AB
       FxPay <-- AB: bucket
       deactivate AB
       end
       FxPay -> FxPay: calculate by drools rules:
       note right
             required=true/false
             method=null/SMS_VOICE
             skipEnabled=true/false
       end note
       deactivate FxBank
   end
group interruption-2 (is redirect to PS required)
       FxPay -> FxPay : prepare redirect link and pendingActionId
       note left
       pay_moneta_out
       end note
       deactivate FxBank
   end


alt restrictions (is getWithdrawalRestrictions returns Restricted)
    FxPay --> UPP: WithdrawalNotAllowed
    deactivate FxPay
    UPP --> Client: redirect by restrictionUrl \n with continueUrl to UPP
    Client --> Client : KYC forms
    note right
    Fill restrictions from
    getWithdrawalRestrictions
    end note
    Client -> UPP: redirect by continueUrl
    UPP -> UPP : reinit http session by token
    note left
    again start with requestWithdrawal call
    end note
else redirect to 2FA
    FxPay --> UPP: 2FAConfirmationRequired, pendingActionId
    deactivate FxPay
    UPP -> 2FA: need2FAConfirmation with pendingActionId
    UPP <-- 2FA: redirectUrl
    UPP --> Client: redirect to 2FA
    Client --> Client : complete 2FA
    Client -> UPP: redirect by continueUrl to UPP \nwith pendingActionId and signature
    UPP -> FxPay : confirmPendingAction with signature
    FxPay -> FxPay: check interruptions \ncreate withdrawal request
    note left
    creating WD request described in default case
    end note
    FxPay -> UPP: InProcessing | Incomplete | RedirectToLink
else redirect to PS
    FxPay --> UPP: RedirectToLink, pendingActionId, redirectUrl
    deactivate FxPay
    UPP --> Client: redirect to PS
    Client -> PS : enter details
    activate PS
    Client <-- PS: redirect to UPP/createAccount/result with params
    Client -> UPP: /createAccount/result with provider params
    deactivate PS
    UPP -> FxPay : confirmPendingAction with provider params
    FxPay -> PS: check passed details/account
    activate PS
    FxPay <-- PS: provider details
    FxPay -> FxPay: check passed and requested details \n(amount, currency, etc)
    deactivate PS
    FxPay -> FxPay: check interruptions \ncreate withdrawal request
    note left
    creating WD request described in default case
    end note
    FxPay -> UPP: InProcessing | Incomplete
else No restrictions | No 2FA | No Redirect
    FxPay -> FxBank : createWithdrawal
    activate FxPay
    activate FxBank
    FxBank -> FxBank: create withdrawal request and transaction
    FxBank -> Kafka: withdrawal:created
    FxBank -> FxBank: Start fraud check
    FxBank --> FxPay : InProcessing | Incomplete
    deactivate FxBank
    FxPay -> UPP : InProcessing | Incomplete
    deactivate FxPay

    opt #FFAAAA status Incomplete
        UPP -> transliterateService : transliterate some fields
        activate transliterateService
        transliterateService --> UPP : result
        deactivate transliterateService

        UPP -> PS : create withdrawal request in EPG (/pay)
        activate PS
        note left
        /pay call
        should be moved to FxPy
        end note
        PS --> UPP : details of pending request
        deactivate PS
        UPP -> FxBank : updateTransaction
        activate FxBank
        FxBank --> UPP : InProcessing
        deactivate FxBank
    end
    deactivate FxPay

    UPP --> Client : InProcessing withdrawal page
    deactivate UPP
    deactivate Client
end

...
== Load result page ==
loop Waiting fraud result (30 sec) while status = InProcessing
Client -> UPP : Waiting fraud result
activate Client
activate UPP
UPP ->  FxBank: getRequestWithdrawalState
activate FxBank
FxBank --> UPP : Ok|InQuarantine|InProcessing with message
deactivate FxBank
UPP --> Client : show result page with message
deactivate Client
end


...
== Approve withdrawal request ==

alt withdraw is holded
Manager -> FxBank : get withdraw list to accept
activate Manager
activate FxBank
FxBank -> Manager
deactivate FxBank
deactivate Manager

opt is client in quarantine
Manager -> FxBank : change quarantine status
activate Manager
activate FxBank
FxBank -> Kafka : withdrawal:review
FxBank --> Manager : ok
deactivate FxBank
deactivate Manager
end

Manager -> FxBank : click accept
activate Manager
activate FxBank
FxBank -> Kafka : withdrawal:accepted
FxBank --> Manager : ok
deactivate FxBank
deactivate Manager
end

...
== Process withdrawal request ==
loop 10 tries
    FxBank -> dealing : changeBalance with operation PAYMENT_OPERATION
    activate FxBank
    activate dealing
    dealing --> FxBank : operationId and operationDate
    deactivate dealing
end
FxBank -> FxBank : set balance from dealing responce
FxBank  -> Kafka : withdrawal:send
FxBank ->> FxPay : process withdrawal transaction
deactivate FxBank
activate FxPay
note left
at the moment 1st call is synchronous
other call by queue
end note
loop 10 repeats if network error
    FxPay -> Crypto_adapter : send
    activate Crypto_adapter
    Crypto_adapter -> FxPay : Ok
    deactivate Crypto_adapter
end
FxPay --> FxBank : update withdawal status ps_fxpay_out\nsuccessed/failed/incomplete
deactivate FxPay


...
== Update operation status from PS==
alt kafka / webhook
PS -> FxPay : send new operation status
activate FxPay
else request status
FxPay -> PS: request payment status
activate PS
PS --> FxPay: payment status with details
deactivate PS
end
activate FxPay
FxPay -> FxPay : update withdrawal
FxPay --> FxBank : update withdawal status os_ps_fxpay_out\nsuccessed/failed
deactivate FxPay


...
== Status of withdrawal entity changed ==
Crypto_adapter --> FxBank : event_handler_explorer_transfer gets \ntransfer event from crypto_adapter \nand processes it
activate FxBank
FxBank -> FxBank: change status for withdraw \nsuccessed/failed/incomplete
opt if status successed/failed
FxBank -> Kafka : push event withdraw: succeeded/failed status
deactivate FxBank
end
@enduml