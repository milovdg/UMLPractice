@startuml withdrawal-common.jpg
scale max 8192 height
autonumber
legend top left
  Common withdrawal sequence diagram except:
  - Antifraud details
  - Create requisites for bank, cup
  - Approve CUP requisites by manager
  - Export of bank payments
end legend

actor Client
actor Manager
participant APP
participant PHUB
participant PSA
participant FxPay
participant AB
participant FxBank
participant UPP
participant 2FA
participant AAA
participant secretsVault
participant tokenProvider as "tokenex.com"
participant PS as "EPG \n+other provider"
participant clientService
participant clientProfileService
participant transliterateService as "transliterate"
participant dealing
participant Kafka

== Get withdrawal requests (libertex, xcoex only) ==
Client -> APP : click withdrawal
activate Client
activate APP
APP -> FxBank: getWithdrawalRequests
activate FxBank
FxBank --> APP : requests
deactivate FxBank
APP --> Client : show requests
note right
Also calls getWithdrawalMethodsRestrictions
And block new request button
if has some restrictions
The logic should be changed be FOLIO-434, 440
end note
deactivate APP
deactivate Client

alt Client click cancel
Client -> APP : cancel request
activate Client
activate APP
APP -> FxBank: cancelWithdrawalRequest
activate FxBank
FxBank -> Kafka: withdrawal:cancel
activate Kafka
FxBank --> APP : Ok
deactivate FxBank
APP -> Client: Ok
deactivate APP
deactivate Client
end

== Get withdrawal page link ==

Client -> APP : click new request
activate Client
activate APP
APP -> PHUB : call getWithdrawalPageLink
activate PHUB
note right
    accountCode
    accountCurrency
    restriction url
end note


PHUB -> AAA : checkSession
activate AAA
AAA --> PHUB : session details
deactivate AAA

par

PHUB -> FxPay : getPaymentMethodsConfiguration
activate FxPay
FxPay --> PHUB : methodsConfiguration
deactivate FxPay

opt If is requisitId passed
PHUB -> FxBank : getWithdrawalRequisites
activate FxBank
FxBank --> PHUB : WD requisites
deactivate FxBank
end




PHUB -> PHUB : getWithdrawalMethodsDetails
PHUB -> FxBank : getAccountInfo with updateBalance
FxBank --> PHUB : accounts
deactivate FxBank
PHUB -> PSA : getProviderAuthorizations
activate PSA
PSA --> PHUB : providerAuthorizations
deactivate PSA
PHUB -> FxPay : getWithdrawalMethodsRestrictions
activate FxPay
FxPay -> FxPay: is2FAConfirmationRequired
FxPay -> FxBank : getWithdrawalMethodsRestrictions
activate FxBank
FxBank --> FxPay : Ok|Restriction
deactivate FxBank
FxPay --> PHUB : Ok|Restriction
deactivate FxPay
end

alt Has restrictions
PHUB --> UPP : WithdrawalNotAllowed
activate UPP
UPP --> Client : KYC forms
deactivate UPP
Client --> Client : KYC forms
note right
Fill restrictions from
getWithdrawalMethodsRestrictions
Again call getWithdrawalPageLink
end note

else No restrictions

PHUB -> UPP : authorizeWithdrawal
note right
    accountCode
    accountCurrency
    restriction url
    withdrawal methods detail (FxPay)
    session (AAA)
end note
activate UPP
UPP -> UPP: generate link
UPP --> PHUB : link to UPP page
UPP -> UPP: start preload
deactivate UPP
PHUB --> APP : RedirectToLink
deactivate FxPay
APP --> Client : link to withdrawal page
deactivate APP
end



== Preload data for withdrawal page during client redirect ==

UPP -> UPP : continue preload
activate UPP
par
opt methods with payment gateway == EPG are exists
UPP -> PS : customer
activate PS
PS --> UPP : saved accounts (requisites)
deactivate PS

UPP -> PS : expressCheckoutV2 request for each currency
activate PS
PS --> UPP : list of EPG methods
deactivate PS
end

UPP -> FxBank : getAccountInfo
activate FxBank
FxBank --> UPP : accounts
deactivate FxBank

UPP -> FxBank : getProfile
activate FxBank
FxBank --> UPP : profile
deactivate FxBank
UPP -> clientService : getLifecycleState
activate clientService
clientService --> UPP : lifecycle state
deactivate clientService
deactivate UPP

opt methods with token provider
UPP -> UPP : take parameters from config \nfor front-end integration
activate UPP
UPP -> secretsVault : get secret for tokenex.com
activate secretsVault
secretsVault --> UPP : secret to validate token HMAC \nand to generate authenticationKey
deactivate secretsVault
UPP -> UPP : prepare config for TokenEx iframe
deactivate UPP
end
end



== Open withdrawal page ==

Client -> UPP : go to link
activate UPP
UPP -> UPP : wait for preloads
note left
    Wait for all preloads:
    - customer (EPG)
    - expressCheckoutV2 (EPG)
    - getProfile
    - getAccountInfo
    - getLifecycleState
end note
alt method with payment gateway = EPG
UPP -> UPP : merge our requisites and EPG
end
opt methods with token provider
UPP -> tokenProvider : tokenex js
activate tokenProvider
tokenProvider --> UPP
deactivate tokenProvider
end
UPP -> UPP : build page attributes
UPP --> Client : withdrawal page
deactivate UPP
deactivate Client


opt methods with token provider
alt withdrawal with existing card number
    UPP -> UPP: show Vault iframe to tie CVV to an existing token
    activate UPP
    UPP --> Client: show iframe
    activate Client
    deactivate UPP

else withdrawal with new card number
    UPP -> UPP: show Vault iframe to add card number with cvv
    activate UPP
    UPP -> UPP: show fields to collect \ncard name, exp date
    UPP --> Client: show iframe
    deactivate UPP
    deactivate Client
end
end
...
== Change method / amount / requisite ==

Client -> UPP : change method, amount, requisite (getWithdrawalInfo)
activate Client
par
activate UPP

UPP -> PHUB : calculateWithdrawalParameters
note left
accountCode, accountCurrency
method
currency, amount
requisiteId (optional)
end note


opt If is requisiteId passed
PHUB -> FxBank : getWithdrawalRequisites
activate FxBank
FxBank --> PHUB : WD requisites
deactivate FxBank
end

PHUB -> PHUB : calculate payment provider \n by requisite or without

PHUB -> FxBank : calculateWithdrawalParameters
activate FxBank
FxBank --> PHUB : commission, compensation, \nconversion rate
deactivate FxBank
PHUB --> UPP : commission, compensation, \nconversion rate
deactivate PHUB



UPP -> PHUB : checkWithdrawal
activate PHUB

note left
accountCode, accountCurrency
method
currency, amount
requisiteId (optional)
end note

par
group group-1
    PHUB -> FxPay : getWithdrawalMethodsRestrictions
    activate FxPay
    FxPay -> FxPay: is2FAConfirmationRequired
    FxPay -> FxBank : getWithdrawalMethodsRestrictions
    activate FxBank
    FxBank --> FxPay : Ok
    deactivate FxBank
    FxPay --> PHUB : Ok
    deactivate FxPay
end

group group-2 consecutive
    opt If requisiteId passed
    PHUB -> FxBank : getWithdrawalRequisites
    activate FxBank
    FxBank --> PHUB : WD requisites
    deactivate FxBank
    end

    PHUB -> PHUB : calculate payment provider \n by requisite or without

    PHUB -> FxBank : checkWithdrawalParameters
    activate FxBank
    FxBank --> PHUB : warnings, amount restrictions
    deactivate FxBank
end
group group-3 (is check requisite allowed by PS)
    par
        PHUB -> PSA : check withdrawal requisite (PS)
        activate PSA
        PSA -> PS : check withdrawal requisite (PS)
        note left
        pay_qiwi_out
        pay_skrill_out
        pay_webmoney_out
        pay_mobile_out
        pay_yandex_out
        end note
        activate PS
        PS --> PSA : restrictions
        deactivate PS

        PSA -> FxBank : checkBankRequisite

        note left
        pay_bank_out
        end note
        activate FxBank
        FxBank --> PSA : restrictions, warnings
        deactivate FxBank
        PSA --> PHUB : restrictions, warnings
        deactivate PSA


    end
end


PHUB --> UPP : commission, compensation, \nconversion rate, warnings, \namount restrictions
deactivate PHUB
end

UPP --> Client: commission, compensation, \nconversion rate, warnings, \namount restrictions
deactivate UPP
deactivate Client


...
== Create withdrawal request ==
opt methods with token provider
    Client -> tokenProvider : iframe.validate() card number, cvv
    activate tokenProvider
    tokenProvider ->> Client: token, card mask, card type
    deactivate tokenProvider
    Client -> tokenProvider : iframe.tokenize() card number, cvv
    activate tokenProvider
    tokenProvider ->> Client: token, card mask, card type
    deactivate tokenProvider
    end

Client -> UPP : submit form with amount, requisite
activate Client
activate UPP
opt methods with token provider
UPP -> UPP : validate HMAC \nbefore trusting the token value
end


UPP -> PHUB : requestWithdrawal, tokenizerDetails

note left
accountCode, accountCurrency
method;
currency, amount;
requisiteId (optional)
optionalFieldValues
end note
activate PHUB
PHUB -> FxPay: is2FAConfirmationRequired
activate FxPay
FxPay --> PHUB : authenticationMethod
deactivate FxPay



par
group group-1 - check restrictions
    PHUB -> FxPay : getWithdrawalRestrictions
    activate FxPay
    FxPay -> FxPay: is2FAConfirmationRequired
    FxPay -> FxBank : getWithdrawalRestrictions
    activate FxBank
    FxBank --> FxPay : Ok | Restricted
    deactivate FxBank
    FxPay --> PHUB  : Ok | Restricted
    deactivate FxPay
end
group group-2 consecutive, prepare data and check parameters
    alt requisiteId not passed, optionalFieldValues passed
        PHUB -> FxBank : setCustomerWithdrawalRequisite, tokenizerDetails
        activate FxBank
        FxBank -> FxBank : save to DB
        FxBank --> PHUB : Ok
        deactivate FxBank
    end
    PHUB -> FxBank : getWithdrawalRequisites
    activate FxBank
    FxBank --> PHUB : WD requisites
    deactivate FxBank
    PHUB -> PHUB : calculate payment provider \n by requisite

    PHUB -> FxBank : checkWithdrawalParameters
    activate FxBank
    FxBank --> PHUB : warnings, amount restrictions
    deactivate FxBank
end
group group-3 - check requisite allowed PS
    par
    PHUB -> PSA : check withdrawal requisite
    activate PSA
    PSA -> PS : check withdrawal requisite (PS))
    note left
    pay_qiwi_out
    pay_skrill_out
    pay_webmoney_out
    pay_mobile_out
    pay_yandex_out
    end note
    activate PS
    PS --> PSA : restrictions
    deactivate PS
    PSA -> FxBank : checkBankRequisite

           note left
           pay_bank_out
           end note
           activate FxBank
           FxBank --> PSA : restrictions, warnings
           deactivate FxBank
           PSA --> PHUB : restrictions, warnings
           deactivate PSA
           deactivate PHUB
end

end

alt restrictions (is getWithdrawalRestrictions returns Restricted)
    PHUB --> UPP: WithdrawalNotAllowed
    activate PHUB
    deactivate PHUB
    UPP --> Client: redirect by restrictionUrl \n with continueUrl to UPP
    Client --> Client : KYC forms
    note right
    Fill restrictions from
    getWithdrawalRestrictions
    end note
    Client -> UPP: redirect by continueUrl
    UPP -> UPP : reinit http session by token
    note left
    again start with requestWithdrawal call
    end note
else redirect to 2FA
    PHUB --> UPP: 2FAConfirmationRequired, pendingActionId
    activate PHUB
    deactivate PHUB
    UPP -> 2FA: need2FAConfirmation with pendingActionId
    activate 2FA
    UPP <-- 2FA: redirectUrl
    deactivate 2FA
    UPP --> Client: redirect to 2FA
    Client --> Client : complete 2FA
    Client -> UPP: redirect by continueUrl to UPP \nwith pendingActionId and signature
    UPP -> PHUB : confirmPendingAction with signature
    activate PHUB
    PHUB -> PHUB: check interruptions \ncreate withdrawal request
    note left
    creating WD request described in default case
    end note
    PHUB -> UPP: InProcessing | Incomplete | RedirectToLink
    deactivate PHUB
else redirect to PS
    PHUB --> UPP: RedirectToLink, pendingActionId, redirectUrl
    activate PHUB
    deactivate PHUB
    UPP --> Client: redirect to PS
    Client -> PS : enter details
    activate PS
    Client <-- PS: redirect to UPP/createAccount/result with params
    Client -> UPP: /createAccount/result with provider params
    deactivate PS
    UPP -> PHUB : confirmPendingAction with provider params
    activate PHUB
    PHUB -> PSA: checkPaymentAccountDetails
    activate PSA
    PSA -> PS : check passed details/account
    activate PS
    PSA <-- PS: provider details
    deactivate PS
    PHUB <--PSA: provider details
    deactivate PSA
    PHUB -> PHUB: check passed and requested details \n(amount, currency, etc)
    PHUB -> PHUB: check interruptions \ncreate withdrawal request
    note left
    creating WD request described in default case
    end note
    PHUB -> UPP: InProcessing | Incomplete
    deactivate PHUB
else No restrictions | No 2FA | No Redirect
    PHUB -> FxBank : createWithdrawal
    activate PHUB
    activate FxBank
    FxBank -> FxBank: create withdrawal request and transaction
    FxBank -> Kafka: withdrawal:created

    FxBank -> FxBank: Start fraud check
    FxBank --> PHUB : InProcessing | Incomplete
    deactivate FxBank
    PHUB -> UPP : InProcessing | Incomplete
    deactivate PHUB
    deactivate FxPay
    UPP --> Client : InProcessing withdrawal page
    deactivate UPP
    deactivate Client
end

...
== Load result page ==
loop Waiting fraud result (30 sec) while status = InProcessing
Client -> UPP : Waiting fraud result
activate Client
activate UPP
UPP ->  FxBank: getRequestWithdrawalState
activate FxBank
FxBank --> UPP : Ok|InQuarantine|InProcessing with message
deactivate FxBank
UPP --> Client : show result page with message
deactivate UPP
deactivate Client
end


...
== Approve withdrawal request ==

alt withdraw is holded
Manager -> FxBank : get withdraw list to accept
activate Manager
activate FxBank
FxBank -> Manager
deactivate FxBank
deactivate Manager

opt is client in quarantine
Manager -> FxBank : change quarantine status
activate Manager
activate FxBank
FxBank -> Kafka : withdrawal:review
FxBank --> Manager : ok
deactivate FxBank
deactivate Manager
end

Manager -> FxBank : click accept
activate Manager
activate FxBank
FxBank -> Kafka : withdrawal:accepted
FxBank --> Manager : ok
deactivate FxBank
deactivate Manager
end

...
== Process withdrawal request ==
loop 10 tries
    FxBank -> dealing : changeBalance with operation PAYMENT_OPERATION
    activate FxBank
    activate dealing
    dealing --> FxBank : operationId and operationDate
    deactivate dealing
end
FxBank -> FxBank : set balance from dealing responce
FxBank  -> Kafka : withdrawal:sent
deactivate FxBank
Kafka ->> PHUB : withdrawal:sent

activate PHUB
note left
at the moment 1st call is synchronous
other call by queue
end note
loop 10 repeats if network error
    PHUB -> Kafka : makeTransfer
    deactivate PHUB
    PSA <-- Kafka : makeTransfer
    activate PSA
    PSA -> PS : request for WD / approve WD (EPG)
    activate PS

    alt methods with token provider
    PSA -> tokenProvider : detokenization and \ntokenization
    activate tokenProvider
    tokenProvider -> PS : add card to invoice\n /payment/sale
    PS --> tokenProvider
    tokenProvider --> PSA : transaction details and status
    deactivate tokenProvider
    end

    PS --> PSA : Ok
    deactivate PS
end
PSA -> Kafka : transfer type=outcomeTransfer,\nstatus=successed/failed/incomplete

...
== Update operation status from PS==
alt kafka / webhook
PS -> PSA : send new operation status
activate PS
deactivate PS
PSA -> PSA : store status in DB
PSA -> Kafka : transfer type=outcomeTransfer,\nstatus=successed/failed/incomplete
Kafka --> FxBank : transfer type=outcomeTransfer,\nstatus=succeeded/failed/incomplete
activate FxBank
deactivate FxBank
else request status
PSA -> PS: get status
activate PS
PS --> PSA: payment status with details
deactivate PS
PSA -> PSA : store status in DB
PSA -> Kafka : transfer type=outcomeTransfer,\nstatus=successed/failed/incomplete
deactivate PSA
Kafka --> FxBank : transfer type=outcomeTransfer,\nstatus=successed/failed/incomplete
activate FxBank
deactivate FxBank
end

...
== Status of outcome transfer changed ==
Kafka --> FxBank : transfer type=outcomeTransfer,\nstatus=successed/failed/incomplete
activate FxBank
FxBank -> FxBank: change status for withdraw \nsuccessed/failed/incomplete
deactivate FxBank
deactivate Kafka

@enduml
