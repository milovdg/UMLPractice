@startuml
autonumber

actor Client
participant PaymentPage
participant Backend
entity Controller
database DB
participant EndPoint
participant PSA
participant Monetix
participant BOLETO
participant Bank

Client -> PaymentPage: User select Monetix method \nand press press deposit
activate PaymentPage

PaymentPage -> Backend --: Request for deposit
activate Backend

Backend -> PSA: /createIncomeTransfer
activate PSA

PSA -> Monetix: /voucher/boleto/sale
activate Monetix

Monetix --> PSA : /voucher/boleto/sale response
deactivate Monetix

PSA --> Backend: transfer in status "inProgress"
deactivate PSA

note right of EndPoint: endPoint:\nnotify/<name>
Monetix ->o Backend ++: Send Callback with redirect REDIRECT DATA 
Backend --> Monetix --: HTTP: 200

loop within timeOut = 30sec
Backend -> DB ++: Get redirect info
DB --> Backend --: Redirect info
end

Controller --> Backend : Redirect info
Backend -> Backend : Update IncomeTransfer :providerDetails \nwith a redirect data
Backend --> Client --: Get a user redirected to \nan INSTRUCTION
deactivate Backend

Client -> BOLETO ++: Complete payment in regards the instruction \nusing an appropriate bank or ATM
BOLETO -> Bank : Initiate bank transfer
activate Bank
Bank -> Bank : Complete transfer
Bank --> BOLETO --: Completed / Declined
BOLETO --> PSA --: OK
PSA --> Backend : OK
Backend --> PaymentPage : OK

PaymentPage --> Client --: OK

PSA -> Monetix ++: Get payment status /payment/status
Monetix --> PSA --: /payment/status response

PSA --> Backend : /payment/status response

note right of EndPoint: endPoint:\nnotify/incomeTransfer
Monetix ->o EndPoint : Send callbacks with a transaction info

loop within a standard timeOut = 30sec
Backend -> DB ++: Get transaction status
DB --> Backend --: Transaction status
end

Controller --> Backend :transfer in :final status

@enduml