@startuml
autonumber

actor Client
actor Manager
participant UPP
participant PHUB
participant FxBank
participant FxPay
participant PSA
participant dealing
participant Pay4Fun
participant Kafka

== Client flow ==

activate Kafka

Client -> UPP ++: Click Withdrawal
UPP -> FxBank ++: getWithdrawalRequests
FxBank --> UPP --: requests
deactivate UPP

Client -> UPP ++: Click new request
UPP -> PHUB ++: call getWithdrawalPageLink
deactivate UPP

par
PHUB -> FxPay ++: getPaymentMethodsConfiguration
FxPay --> PHUB --: MethodsConfiguration
PHUB -> PHUB : getWithdrawalMethodsDetails
PHUB --> Client --: link to withdrawal page
end

deactivate Client

Client -> UPP ++: Choose Pay4Fun method\nfill amount, chose requisites, presses press withdraw
UPP -> PHUB ++: requestWithdrawal, method = pay_pay4fun_out,\naccountCode, accountCurrency, amount, requesiteId
PHUB -> FxBank ++: createWithdrawal
FxBank -> FxBank : create withdrawal
FxBank --> Kafka : psa-?--all: send withdrawal event :created
FxBank --> PHUB --: inProcessing | Incomplete
PHUB --> UPP --: inProcessing | Incomplete
UPP --> Client --: In processing withdrawal page

== Process withdrawal request ==

opt
    Manager -> FxBank ++: click accept
    FxBank --> Kafka : psa-?--all: send :accepted
    FxBank --> Manager : ok
end


FxBank -> dealing ++: changeBalance with operation PAYMENT_OPERATION
dealing --> FxBank --:  operationId and operationDate
FxBank -> FxBank : Set balance according to dealing response 
FxBank -> Kafka --: psa-?--all: send :sent

Kafka -> PHUB ++: withdrawal: sent
PHUB -> Kafka --: makeTransfer
Kafka --> PSA ++: makeTransfer
PSA -> Pay4Fun ++: <b><font color=green>POST: /payout/payout/
Pay4Fun --> PSA --: <b><font color=green>/payout/payout/ response \n
PSA --> Kafka --: psa-?--all: send transfer type = outcomeTransfer, \nstatus=succeeded/failed

deactivate PSA


== Statements ==
    loop loop by async operation configuration
    PSA -> Pay4Fun ++: <b><font color=green>GET: Get payment status /payout/transaction/
    activate PSA
    Pay4Fun --> PSA --: <b><font color=green>status
    PSA -> PSA: update transfer
    PSA --> Kafka --: transfer event
    Kafka --> FxBank : psa-?--all: send transfer type = outcomeTransfer, \nstatus=succeeded/failed
    deactivate PSA
end loop

== Convertation ==
Kafka -> PHUB ++: psa-?--all: read transfer event
PHUB --> Kafka --: payment-hub--all: send transfer event

Kafka -> FxBank ++: payment-hub--all: read transfer event
alt : status == successful
FxBank -> FxBank : Convert crypto -> fiats
end
FxBank -> FxBank: save/update withdrawal entity\nchange account balance
FxBank --> Kafka --: fxbank--all: withdrawal event

deactivate Kafka

@enduml
