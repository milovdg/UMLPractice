@startuml
autonumber

actor Client

== Client flow ==
activate Client
Client -> UPP ++: Select OTC365 method\nfill amount

Client -> UPP : press press deposit
UPP -> PHUB ++: requestDeposit\nmethod = pay_otc365
PHUB -> PSA ++: /createIncomeTransfer\npaymentIntegrationCode = pay_otc365
PSA -> PSA: save transfer

PSA -> OTC365 ++: Request the order <b><font color=green>POST: /addIntentOrder
OTC365 -> OTC365 : Verify client by phone

alt Once per 120 hour
    OTC365 -> OTC365 : Facial scanning
end

OTC365 --> PSA --: Redirect link

PSA --> PHUB --: RedirectInfo, redirect url, transferId
PHUB --> UPP --: RedirectInfo, redirect url, transferId
UPP -> Client --: redirect url (OTC365)

Client -> OTC365 ++: load deposit page
OTC365 --> Client --: deposit page

Client -> OTC365 ++: complete payment
OTC365 --> Client --: get back

Client -> UPP ++: load result page
UPP -> PHUB ++: updateIncomeTransfer\nwith transferId
PHUB -> PSA ++: updateIncomeTransfer\nwith transferId
PSA -> PSA: get transfer from DB
opt status not final
    PSA -> OTC365 ++: Get payment status <b><font color=green>POST: /queryIntentOrder
    OTC365 --> PSA --: <b><font color=green>status
    PSA -> PSA: update transfer
    PSA --> Kafka: psa-?--all: send transfer event
end opt
PSA -> PHUB --: Ok, transfer status
PHUB -> UPP --: Ok, transfer status
UPP -> Client --: result page
deactivate Client

== Statements ==
    activate PSA
    loop loop by async operation configuration
    PSA -> OTC365 ++: Get payment status <b><font color=green>POST: /queryIntentOrder
    OTC365 --> PSA --: <b><font color=green>status
    PSA -> PSA: update transfer
    PSA --> Kafka: transfer event
    deactivate PSA
end loop

== Webhook ==
activate OTC365
OTC365 --> PSA --: <b><font color=green>status
PSA -> PSA: update transfer
PSA --> Kafka: transfer event
PSA --> OTC365--: <b><font color=green>HTTP 200
deactivate OTC365

@enduml